cmake_minimum_required(VERSION 3.30)
project(SDLYukon C)

set(CMAKE_C_STANDARD 23)

# Include the command that downloads libraries
include(FetchContent)

# define a function for adding git dependencies
function(include_dependency libName gitURL gitTag)
    # setup the declare
    FetchContent_Declare(${libName}
            GIT_REPOSITORY ${gitURL}
            GIT_TAG        ${gitTag}
            GIT_SHALLOW    TRUE
            GIT_PROGRESS   TRUE
    )

    FetchContent_MakeAvailable(${libName})
endfunction()

# add SDL3 support
find_package(SDL3 QUIET)
if (NOT SDL3_FOUND)
    message(STATUS "Getting SDL3 from Github")
    include_dependency(SDL3 https://github.com/libsdl-org/SDL.git release-3.2.0)
else()
    message(STATUS "Using local SDL3")
endif()

# add SDL_image support
find_package(SDL3_image QUIET)
if (NOT SDL3_image_FOUND)
    message(STATUS "Getting SDL3_image from Github")
    include_dependency(SDL3_image https://github.com/libsdl-org/SDL_image.git main)
else()
    message(STATUS "Using local SDL3_image")
endif()

add_executable(SDLYukon WIN32 main.c)

# set the include directory
target_include_directories(SDLYukon PUBLIC ${SDL3_INCLUDE_DIRS})

target_compile_definitions(SDLYukon PRIVATE SDL_MAIN_USE_CALLBACKS)

# link all libraries to the project
target_link_libraries(SDLYukon PRIVATE SDL3::SDL3 SDL3_image::SDL3_image)

if (WIN32)
    # Copy SDL3 DLL
    add_custom_command(
            TARGET SDLYukon POST_BUILD
            COMMAND "${CMAKE_COMMAND}" -E copy_if_different "$<TARGET_FILE:SDL3::SDL3>" "$<TARGET_FILE_DIR:SDLYukon>"
            VERBATIM
    )

    # Copy SDL3_image DLL
    add_custom_command(
            TARGET SDLYukon POST_BUILD
            COMMAND "${CMAKE_COMMAND}" -E copy_if_different "$<TARGET_FILE:SDL3_image::SDL3_image>" "$<TARGET_FILE_DIR:SDLYukon>"
            VERBATIM
    )
endif()

//credit til erikyuzwa
